D:\NonlinearRelaxation\venv\Scripts\python.exe "D:\Programs\JetBrains\PyCharm 2019.2\helpers\pydev\pydevconsole.py" --mode=client --port=60337
import sys; print('Python %s on %s' % (sys.version, sys.platform))
sys.path.extend(['D:\\NonlinearRelaxation', 'D:/NonlinearRelaxation'])
PyDev console: starting.
Python 3.6.5 (v3.6.5:f59c0932b4, Mar 28 2018, 17:00:18) [MSC v.1900 64 bit (AMD64)] on win32
imporn numpy as  np
  File "<input>", line 1
    imporn numpy as  np
               ^
SyntaxError: invalid syntax
1.0 + eps != 1.0
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'eps' is not defined
1.0 + np.finfo(float).eps != 1.0
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'np' is not defined
import numpy as np
1.0 + np.finfo(float).eps != 1.0
True
1.0 + np.finfo(float).eps/2 != 1.0
False
1.0 + np.finfo(float).eps*2 != 1.0
True
6e-16+1e-30
6.00000000000001e-16
6e-16+1e-17
6.1e-16
1.125+1.25
2.375
2.375-1.25
1.125
0.125/2
0.0625
0.375-0.0625
0.3125
0.375-0.0625/2
0.34375
0.375-0.0625/3
0.3541666666666667
0.375-0.0625/4
0.359375
0.375-0.0625/5
0.3625
0.375-0.0625/6
0.3645833333333333
0.375-0.0625/7
0.36607142857142855
0.375-0.0625/8
0.3671875
0.375-0.0625/9
0.3680555555555556
0.375-0.0625/10
0.36875
0.375-0.0625/11
0.3693181818181818
0.375-0.0625/20
0.371875
0.375-0.0625/50
0.37375
0.375-0.0625/100
0.374375
0.375-0.0625/200
0.3746875
0.375-0.0625/500
0.374875
0.375-0.0625/1000
0.3749375
f = lambda x, y: x+y/2
f(1.2,1.3)
1.85
f = lambda x, y: (x+y)/2
f(1.2,1.3)
1.25
f(1.25,1.3)
1.275
f(1.275,1.3)
1.2875
f(1.275,1.2875)
1.28125
f(1.275,1.28125)
1.278125
f(1.25,1.275)
1.2625
f(1.25,1.2625)
1.25625
f(1.25,1.25625)
1.253125
f(1.253125,1.2625)
1.2578125
f(1.253125,1.2578125)
1.25546875
f(1.253125,1.25546875)
1.254296875
f(1.254296875,1.25546875)
1.2548828125
f(1.2548828125,1.25546875)
1.25517578125
f(1.25517578125,1.25546875)
1.2553222656249998
f(1.2553222656249998,1.25546875)
1.2553955078124999
f(1.2553222656249998,1.2553955078124999)
1.2553588867187497
f(1.2553222656249998,1.2553588867187497)
1.2553405761718748
f(1.2553405761718748,1.2553588867187497)
1.2553497314453121
f(1.2553405761718748,1.2553497314453121)
1.2553451538085936
f(1.2553405761718748,1.2553451538085936)
1.2553428649902343
f(1.2553405761718748,1.2553428649902343)
1.2553417205810544
f(1.2553405761718748,1.2553417205810544)
1.2553411483764645
f(1.2553405761718748,1.2553411483764645)
1.2553408622741697
1.2553408622741697-1.2553411483764645
-2.861022947442393e-07
f(1.2553408622741697,1.2553411483764645)
1.2553410053253171
f(1.2553410053253171,1.2553411483764645)
1.2553410768508908
1.2553410768508908-1.2553410053253171
7.152557368605983e-08
np.finfo(float).eps+1.0>1.0
True
np.finfo(float).eps+1.0==1.0
False
1+np.finfo(float).eps==1.0
False
1.0+np.finfo(float).eps==1.0
False
1.0+np.finfo(float).eps != 1.0
True
1.0+np.finfo(float).eps/2 != 1.0
False
1.0+np.finfo(float).eps/2 > 1.0
False
1.0+np.finfo(float).eps/2 == 1.0
True
2**8
256
2*16
32
2**16
65536
2**64
18446744073709551616
2**32
4294967296
np.iinfo(np.int).max
2147483647
1e-14+9.911579857e-1
0.99115798570001
1.734723475976807e-18*20
3.469446951953614e-17
(0.008838846336213-0.008838846336212)/np.finfo(float).eps
4.5
x=[11,7,4,12,2,8,5,1,13,9,3,6,14,10,15]
x[::2]
[11, 4, 2, 5, 13, 3, 14, 15]
x[:-1]
[11, 7, 4, 12, 2, 8, 5, 1, 13, 9, 3, 6, 14, 10]
x[1:]
[7, 4, 12, 2, 8, 5, 1, 13, 9, 3, 6, 14, 10, 15]
x[:-1]-x[1:]
Traceback (most recent call last):
  File "<input>", line 1, in <module>
TypeError: unsupported operand type(s) for -: 'list' and 'list'
x=np.array(x)
x[:-1]-x[1:]
array([  4,   3,  -8,  10,  -6,   3,   4, -12,   4,   6,  -3,  -8,   4,
        -5])
abs(x[:-1]-x[1:])
array([ 4,  3,  8, 10,  6,  3,  4, 12,  4,  6,  3,  8,  4,  5])
sum(abs(x[:-1]-x[1:]))
80
abs(x[:-2]-x[2:])
array([ 7,  5,  2,  4,  3,  7,  8,  8, 10,  3, 11,  4,  1])
abs(x[:-15]-x[15:])
array([], dtype=int32)
abs(x[:-14]-x[14:])
array([4])
len(x)
15
s=0
for i in range(1, len(x)):
    print(sum(abs(x[:-i]-x[i:])))
    s += sum(abs(x[:-i]-x[i:]))
    
80
73
57
55
44
47
59
35
25
34
21
17
9
4
s
560
x=[11,5,9,3,12,4,8,1,14,6,10,2,13,7,15]
x=np.array(x)
s=0
for i in range(1, len(x)):
    print(sum(abs(x[:-i]-x[i:])))
    s += sum(abs(x[:-i]-x[i:]))
    
102
44
92
19
75
31
63
17
43
15
31
10
14
4
s
560
x=np.random.rand(15)
x
array([0.03848249, 0.33551356, 0.98157283, 0.75661515, 0.90674153,
       0.10388535, 0.40252041, 0.58431338, 0.12393659, 0.81370846,
       0.00740859, 0.6530425 , 0.97599905, 0.47997242, 0.16392065])
np.random.randint(1, 15, size=15)
array([ 3,  6,  2, 12, 14,  7,  7, 13,  9, 14,  6,  2, 11,  3,  1])
np.random.randint(1, 16, size=15)
array([ 2, 10, 12, 13,  6,  9,  7, 13, 12, 10,  2,  3,  7, 12, 11])
np.random.random_integers(1, 15, size=15)
array([14, 12,  8,  5, 14,  5, 15, 15, 12,  8,  9,  6,  7, 14, 10])
np.random.choice(14, 15)
array([ 2,  9,  7,  0,  5, 10,  7,  8,  4,  7,  2,  0,  1,  3,  7])
np.random.choice(15, 15)
array([12, 10,  5, 11, 12, 14, 14,  8, 14,  5,  3, 12,  0,  4,  8])
np.random.choice(15, 15, replace=False)
array([ 5,  7,  1, 14,  3,  6,  9, 12, 10,  0,  4,  8,  2, 13, 11])
len(np.random.choice(15, 15, replace=False))
15
np.random.choice(15, 15, replace=False)+1
array([ 2, 14,  3,  8, 15, 10,  1, 11, 12, 13,  7,  5,  4,  9,  6])
x=np.random.choice(15, 15, replace=False)+1
x
array([ 2, 13,  9,  6,  8,  4, 11, 15,  7,  5,  3, 12, 14, 10,  1])
s=0
for i in range(1, len(x)):
    print(sum(abs(x[:-i]-x[i:])))
    s += sum(abs(x[:-i]-x[i:]))
    
71
82
79
53
24
41
55
47
29
18
17
23
20
1
s
560
s=1
for i in range(1, len(x)):
    print(sum(abs(x[:-i]-x[i:])))
    s += sum(abs(x[:-i]-x[i:]))
print(s**(1/(len(x) - 1)))
71
82
79
53
24
41
55
47
29
18
17
23
20
1
1.571645126188632
x=[11,7,4,12,2,8,5,1,13,9,3,6,14,10,15]
s=1
for i in range(1, len(x)):
    print(sum(abs(x[:-i]-x[i:])))
    s += sum(abs(x[:-i]-x[i:]))
print(s**(1/(len(x) - 1)))
Traceback (most recent call last):
  File "<input>", line 3, in <module>
TypeError: unsupported operand type(s) for -: 'list' and 'list'
x=np.array([11,7,4,12,2,8,5,1,13,9,3,6,14,10,15])
s=1
for i in range(1, len(x)):
    print(sum(abs(x[:-i]-x[i:])))
    s += sum(abs(x[:-i]-x[i:]))
print(s**(1/(len(x) - 1)))
80
73
57
55
44
47
59
35
25
34
21
17
9
4
1.571645126188632
x=np.array([11,5,9,3,12,4,8,1,14,6,10,2,13,7,15])
s=1
for i in range(1, len(x)):
    print(sum(abs(x[:-i]-x[i:])))
    s += sum(abs(x[:-i]-x[i:]))
print(s**(1/(len(x) - 1)))
102
44
92
19
75
31
63
17
43
15
31
10
14
4
1.571645126188632
x=np.array([11,7,4,12,2,8,5,1,13,9,3,6,14,10,15])
s=1
for i in range(1, len(x)):
    print(sum(abs(x[:-i]-x[i:])))
    s *= sum(abs(x[:-i]-x[i:]))
print(s**(1/(len(x) - 1)))
80
73
57
55
44
47
59
35
25
34
<input>:4: RuntimeWarning: overflow encountered in long_scalars
21
17
9
4
<input>:5: RuntimeWarning: invalid value encountered in power
nan
s
-1076333056
1*80*73*57*55*44*47*59*35*25*34
66456873898800000
1*80*73*57*55*44*47*59*35*25*34*21
1395594351874800000
x
array([11,  7,  4, 12,  2,  8,  5,  1, 13,  9,  3,  6, 14, 10, 15])
s=1
for i in range(1, len(x)):
    print(sum(abs(x[:-i]-x[i:])), s)
    s *= sum(abs(x[:-i]-x[i:]))
print(s**(1/(len(x) - 1)))
80 1
73 80
57 5840
55 332880
44 18308400
47 805569600
59 -792934464
35 461506880
25 -1027128384
34 91594176
21 -1180765312
17 973732224
9 -626421376
4 -1342825088
nan
805569600*47
37861771200
s=1
for i in range(1, len(x)):
    print(s)
    s *= sum(abs(x[:-i]-x[i:]))
    print(sum(abs(x[:-i] - x[i:])), s)
print(s**(1/(len(x) - 1)))
1
80 80
80
73 5840
5840
57 332880
332880
55 18308400
18308400
44 805569600
805569600
47 -792934464
-792934464
59 461506880
461506880
35 -1027128384
-1027128384
25 91594176
91594176
34 -1180765312
-1180765312
21 973732224
973732224
17 -626421376
-626421376
9 -1342825088
-1342825088
4 -1076333056
<input>:6: RuntimeWarning: invalid value encountered in power
nan
805569600*47
37861771200
s=1
for i in range(1, len(x)):
    print(s)
    s = s * sum(abs(x[:-i]-x[i:]))
    print(sum(abs(x[:-i] - x[i:])), s)
print(s**(1/(len(x) - 1)))
1
80 80
80
73 5840
5840
57 332880
332880
55 18308400
18308400
44 805569600
805569600
47 -792934464
-792934464
59 461506880
461506880
35 -1027128384
-1027128384
25 91594176
91594176
34 -1180765312
-1180765312
21 973732224
973732224
17 -626421376
-626421376
9 -1342825088
-1342825088
4 -1076333056
nan
s=1
for i in range(1, len(x)):
    print(s, sum(abs(x[:-i]-x[i:])))
    s = s * sum(abs(x[:-i]-x[i:]))
    print('s= ',s)
print(s**(1/(len(x) - 1)))
1 80
s=  80
80 73
s=  5840
5840 57
s=  332880
332880 55
s=  18308400
18308400 44
s=  805569600
805569600 47
s=  -792934464
-792934464 59
s=  461506880
461506880 35
s=  -1027128384
-1027128384 25
s=  91594176
91594176 34
s=  -1180765312
-1180765312 21
s=  973732224
973732224 17
s=  -626421376
-626421376 9
s=  -1342825088
-1342825088 4
s=  -1076333056
nan
805569600*47
37861771200
s=1
for i in range(1, len(x)):
    print(s, sum(abs(x[:-i]-x[i:])))
    s = s * int(sum(abs(x[:-i]-x[i:])))
    print('s= ',s)
print(s**(1/(len(x) - 1)))
1 80
s=  80
80 73
s=  5840
5840 57
s=  332880
332880 55
s=  18308400
18308400 44
s=  805569600
805569600 47
s=  37861771200
37861771200 59
s=  2233844500800
2233844500800 35
s=  78184557528000
78184557528000 25
s=  1954613938200000
1954613938200000 34
s=  66456873898800000
66456873898800000 21
s=  1395594351874800000
1395594351874800000 17
s=  23725103981871600000
23725103981871600000 9
s=  213525935836844400000
213525935836844400000 4
s=  854103743347377600000
31.268561476967434
s=1
for i in range(1, len(x)):
    s = s * int(sum(abs(x[:-i]-x[i:])))
print(s**(1/(len(x) - 1)))
31.268561476967434
x=np.array([11,7,4,12,2,8,5,1,13,9,3,6,14,10,15])
s=1
for i in range(1, len(x)):
    s = s * int(sum(abs(x[:-i]-x[i:])))
print(s**(1/(len(x) - 1)))
31.268561476967434
x=np.array([11,5,9,3,12,4,8,1,14,6,10,2,13,7,15])
s=1
for i in range(1, len(x)):
    s = s * int(sum(abs(x[:-i]-x[i:])))
print(s**(1/(len(x) - 1)))
28.369465460346444
x=np.random.choice(15, 15, replace=False)+1
x
array([ 8, 13,  5, 14, 12,  6, 15, 11,  1,  3,  9,  2, 10,  7,  4])
s=1
for i in range(1, len(x)):
    s = s * int(sum(abs(x[:-i]-x[i:])))
print(s**(1/(len(x) - 1)))
30.247626503424165
res = []
for i in range(100):
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    res.append(s ** (1 / (len(x) - 1)))
print(max(res))
35.78323908548818
res = []
res1=[]
for i in range(100):
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    res.append(s ** (1 / (len(x) - 1)))
    res1.append(x)
print(max(res))
36.88678950586559
res = []
res1=[]
for i in range(1000):
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    res.append(s ** (1 / (len(x) - 1)))
    res1.append(x)
print(max(res))
37.74292546003595
res = []
res1=[]
for i in range(1000):
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    res.append(s ** (1 / (len(x) - 1)))
    res1.append(x)
print(max(res))
37.24275561015534
max_=-1
res = []
res1=[]
for i in range(1000):
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    r=s ** (1 / (len(x) - 1))
    if r>max_:
        r=max_
        res=x
print(res)
[ 8  1 10  9 15 13  6  5 12  7  2  4 14 11  3]
max_=-1
res = []
res1=[]
for i in range(1000):
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    r=s ** (1 / (len(x) - 1))
    if r>max_:
        r=max_
        res=x
print(max_,res)
-1 [13  6  3  7 12  5  4 14 15 10  8  9  2  1 11]
max_=-1
res = []
res1=[]
for i in range(1000):
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    r=s ** (1 / (len(x) - 1))
    if r>max_:
        max_=r
        res=x
print(max_,res)
37.275946663803026 [14 13 15  7 12 11  5  6  8  2  4 10  9  3  1]
max_=-1
res = []
res1=[]
for i in range(10000):
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    r=s ** (1 / (len(x) - 1))
    if r>max_:
        max_=r
        res=x
print(max_,res)
38.24241873439327 [ 1  2  4  8  6  3  5 12  7  9 11 13 10 14 15]
max_=-1
res = []
res1=[]
for i in range(100000):
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    r=s ** (1 / (len(x) - 1))
    if r>max_:
        max_=r
        res=x
print(max_,res)
38.07167886192033 [14 13 11 15  9  7 12  6  5  8 10  4  2  3  1]
max_=-1
res = []
res1=[]
for i in range(100000):
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    r=s ** (1 / (len(x) - 1))
    if r>max_:
        max_=r
        res=x
print(max_,res)
38.32161877180317 [ 1  2  6  5  3 11  4  7  8 12 10  9 13 14 15]
max_=-1
res = []
res1=[]
while True:
    x = np.random.choice(15, 15, replace=False) + 1
    s = 1
    for i in range(1, len(x)):
        s = s * int(sum(abs(x[:-i] - x[i:])))
    r=s ** (1 / (len(x) - 1))
    if r>max_:
        max_=r
        res=x
        print(max_,res)
        
32.25378417414421 [ 6  5  4 12  2  7 15  9  3 10  1 14  8 13 11]
32.26599595618996 [15  3  4  2 10  6 11  5  7  1 14 12 13  8  9]
34.657368044713 [ 9  5  3  8  4 10  1  6  2 12  7 11 14 13 15]
35.1600541325453 [14 11  5 12  7 13  4 10  8  3  6  9 15  1  2]
36.309310488187855 [12 15  7  6  8 11  9 13 14  3  5 10  4  2  1]
36.451167884986326 [15 14  6 13  9 11  8  4 12 10  5  3  2  1  7]
37.70062259038877 [ 3  5  2  1  7  4  9 12  8  6 11 13 10 14 15]
37.99530200992226 [ 1  2  3  7  5 11  6 10  4 12  8  9 15 13 14]
38.00445696858064 [ 1  2  8  3 11  7  5  4  6 13 10 12  9 14 15]
38.15757917139957 [ 1  3  5  8 10  2  7  6  4 11  9 13 12 14 15]
38.309174446496456 [15 14 11 13 10 12  5  8  6  3  7  9  4  2  1]
38.357290831338034 [15 14 12  9 11  7 10 13  3  8  6  5  4  2  1]
Process finished with exit code 0

average 11:
[(29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 7, 3, 9, 1, 11, 2, 10, 4, 8, 6)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (5, 7, 3, 9, 1, 11, 2, 10, 8, 4, 6)), (29.90909090909091, [47, 40, 33, 32, 27, 17, 14, 5, 4, 1], (5, 7, 3, 9, 1, 11, 10, 2, 4, 8, 6)), (29.90909090909091, [51, 32, 33, 40, 19, 25, 8, 9, 2, 1], (5, 7, 3, 9, 1, 11, 10, 2, 8, 4, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 7, 3, 9, 2, 11, 1, 10, 4, 8, 6)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (5, 7, 3, 9, 2, 11, 1, 10, 8, 4, 6)), (29.90909090909091, [49, 36, 29, 44, 21, 17, 14, 5, 4, 1], (5, 7, 3, 9, 10, 1, 11, 2, 4, 8, 6)), (29.90909090909091, [53, 28, 37, 36, 21, 25, 8, 9, 2, 1], (5, 7, 3, 9, 10, 1, 11, 2, 8, 4, 6)), (29.90909090909091, [45, 44, 31, 32, 29, 13, 16, 5, 4, 1], (5, 7, 3, 9, 11, 1, 2, 10, 4, 8, 6)), (29.90909090909091, [41, 52, 31, 24, 29, 21, 10, 9, 2, 1], (5, 7, 3, 9, 11, 1, 2, 10, 8, 4, 6)), (29.90909090909091, [49, 36, 29, 44, 21, 17, 14, 5, 4, 1], (5, 7, 3, 9, 11, 1, 10, 2, 4, 8, 6)), (29.90909090909091, [53, 28, 37, 36, 21, 25, 8, 9, 2, 1], (5, 7, 3, 9, 11, 1, 10, 2, 8, 4, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 7, 3, 10, 1, 11, 2, 9, 4, 8, 6)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (5, 7, 3, 10, 1, 11, 2, 9, 8, 4, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 7, 3, 10, 2, 11, 1, 9, 4, 8, 6)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (5, 7, 3, 10, 2, 11, 1, 9, 8, 4, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 7, 4, 9, 1, 11, 2, 10, 3, 8, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 7, 4, 9, 2, 11, 1, 10, 3, 8, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 7, 4, 10, 1, 11, 2, 9, 3, 8, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 7, 4, 10, 2, 11, 1, 9, 3, 8, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (5, 7, 8, 2, 10, 1, 11, 3, 9, 4, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (5, 7, 8, 2, 11, 1, 10, 3, 9, 4, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (5, 7, 8, 3, 10, 1, 11, 2, 9, 4, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (5, 7, 8, 3, 11, 1, 10, 2, 9, 4, 6)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (5, 7, 9, 2, 10, 1, 11, 3, 4, 8, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (5, 7, 9, 2, 10, 1, 11, 3, 8, 4, 6)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (5, 7, 9, 2, 11, 1, 10, 3, 4, 8, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (5, 7, 9, 2, 11, 1, 10, 3, 8, 4, 6)), (29.90909090909091, [51, 32, 37, 32, 25, 21, 12, 5, 4, 1], (5, 7, 9, 3, 1, 11, 2, 10, 4, 8, 6)), (29.90909090909091, [47, 40, 29, 40, 25, 13, 14, 9, 2, 1], (5, 7, 9, 3, 1, 11, 2, 10, 8, 4, 6)), (29.90909090909091, [39, 56, 31, 20, 29, 25, 10, 5, 4, 1], (5, 7, 9, 3, 1, 11, 10, 2, 4, 8, 6)), (29.90909090909091, [43, 48, 31, 28, 29, 17, 12, 9, 2, 1], (5, 7, 9, 3, 1, 11, 10, 2, 8, 4, 6)), (29.90909090909091, [51, 32, 37, 32, 25, 21, 12, 5, 4, 1], (5, 7, 9, 3, 2, 11, 1, 10, 4, 8, 6)), (29.90909090909091, [47, 40, 29, 40, 25, 13, 14, 9, 2, 1], (5, 7, 9, 3, 2, 11, 1, 10, 8, 4, 6)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (5, 7, 9, 3, 10, 1, 11, 2, 4, 8, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (5, 7, 9, 3, 10, 1, 11, 2, 8, 4, 6)), (29.90909090909091, [49, 36, 29, 44, 19, 21, 12, 5, 4, 1], (5, 7, 9, 3, 11, 1, 2, 10, 4, 8, 6)), (29.90909090909091, [45, 44, 29, 36, 27, 13, 14, 9, 2, 1], (5, 7, 9, 3, 11, 1, 2, 10, 8, 4, 6)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (5, 7, 9, 3, 11, 1, 10, 2, 4, 8, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (5, 7, 9, 3, 11, 1, 10, 2, 8, 4, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 8, 3, 9, 1, 11, 2, 10, 4, 7, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 8, 3, 9, 2, 11, 1, 10, 4, 7, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 8, 3, 10, 1, 11, 2, 9, 4, 7, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 8, 3, 10, 2, 11, 1, 9, 4, 7, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 8, 4, 9, 1, 11, 2, 10, 3, 7, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 8, 4, 9, 2, 11, 1, 10, 3, 7, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 8, 4, 10, 1, 11, 2, 9, 3, 7, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (5, 8, 4, 10, 2, 11, 1, 9, 3, 7, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 4, 8, 2, 10, 1, 11, 3, 9, 5, 7)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 4, 8, 2, 10, 1, 11, 3, 9, 7, 5)), (29.90909090909091, [51, 32, 37, 32, 25, 21, 12, 5, 4, 1], (6, 4, 8, 2, 10, 1, 11, 9, 3, 5, 7)), (29.90909090909091, [53, 28, 37, 36, 21, 25, 8, 9, 2, 1], (6, 4, 8, 2, 10, 1, 11, 9, 3, 7, 5)), (29.90909090909091, [45, 44, 31, 32, 29, 13, 16, 5, 4, 1], (6, 4, 8, 2, 10, 11, 1, 3, 9, 5, 7)), (29.90909090909091, [43, 48, 31, 28, 29, 17, 12, 9, 2, 1], (6, 4, 8, 2, 10, 11, 1, 3, 9, 7, 5)), (29.90909090909091, [49, 36, 29, 44, 19, 21, 12, 5, 4, 1], (6, 4, 8, 2, 10, 11, 1, 9, 3, 5, 7)), (29.90909090909091, [51, 32, 33, 40, 19, 25, 8, 9, 2, 1], (6, 4, 8, 2, 10, 11, 1, 9, 3, 7, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 4, 8, 2, 11, 1, 10, 3, 9, 5, 7)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 4, 8, 2, 11, 1, 10, 3, 9, 7, 5)), (29.90909090909091, [51, 32, 37, 32, 25, 21, 12, 5, 4, 1], (6, 4, 8, 2, 11, 1, 10, 9, 3, 5, 7)), (29.90909090909091, [53, 28, 37, 36, 21, 25, 8, 9, 2, 1], (6, 4, 8, 2, 11, 1, 10, 9, 3, 7, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 4, 8, 3, 10, 1, 11, 2, 9, 5, 7)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 4, 8, 3, 10, 1, 11, 2, 9, 7, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 4, 8, 3, 11, 1, 10, 2, 9, 5, 7)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 4, 8, 3, 11, 1, 10, 2, 9, 7, 5)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (6, 4, 8, 9, 1, 11, 2, 10, 3, 5, 7)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (6, 4, 8, 9, 1, 11, 2, 10, 3, 7, 5)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (6, 4, 8, 9, 2, 11, 1, 10, 3, 5, 7)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (6, 4, 8, 9, 2, 11, 1, 10, 3, 7, 5)), (29.90909090909091, [49, 36, 29, 44, 21, 17, 14, 5, 4, 1], (6, 4, 8, 10, 1, 11, 2, 3, 9, 5, 7)), (29.90909090909091, [47, 40, 29, 40, 25, 13, 14, 9, 2, 1], (6, 4, 8, 10, 1, 11, 2, 3, 9, 7, 5)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (6, 4, 8, 10, 1, 11, 2, 9, 3, 5, 7)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (6, 4, 8, 10, 1, 11, 2, 9, 3, 7, 5)), (29.90909090909091, [47, 40, 33, 32, 27, 17, 14, 5, 4, 1], (6, 4, 8, 10, 2, 1, 11, 3, 9, 5, 7)), (29.90909090909091, [45, 44, 29, 36, 27, 13, 14, 9, 2, 1], (6, 4, 8, 10, 2, 1, 11, 3, 9, 7, 5)), (29.90909090909091, [39, 56, 31, 20, 29, 25, 10, 5, 4, 1], (6, 4, 8, 10, 2, 1, 11, 9, 3, 5, 7)), (29.90909090909091, [41, 52, 31, 24, 29, 21, 10, 9, 2, 1], (6, 4, 8, 10, 2, 1, 11, 9, 3, 7, 5)), (29.90909090909091, [49, 36, 29, 44, 21, 17, 14, 5, 4, 1], (6, 4, 8, 10, 2, 11, 1, 3, 9, 5, 7)), (29.90909090909091, [47, 40, 29, 40, 25, 13, 14, 9, 2, 1], (6, 4, 8, 10, 2, 11, 1, 3, 9, 7, 5)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (6, 4, 8, 10, 2, 11, 1, 9, 3, 5, 7)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (6, 4, 8, 10, 2, 11, 1, 9, 3, 7, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 4, 9, 2, 10, 1, 11, 3, 8, 5, 7)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 4, 9, 2, 10, 1, 11, 3, 8, 7, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 4, 9, 2, 11, 1, 10, 3, 8, 5, 7)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 4, 9, 2, 11, 1, 10, 3, 8, 7, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 4, 9, 3, 10, 1, 11, 2, 8, 5, 7)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 4, 9, 3, 10, 1, 11, 2, 8, 7, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 4, 9, 3, 11, 1, 10, 2, 8, 5, 7)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 4, 9, 3, 11, 1, 10, 2, 8, 7, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 5, 8, 2, 10, 1, 11, 3, 9, 4, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 5, 8, 2, 11, 1, 10, 3, 9, 4, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 5, 8, 3, 10, 1, 11, 2, 9, 4, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 5, 8, 3, 11, 1, 10, 2, 9, 4, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 5, 9, 2, 10, 1, 11, 3, 8, 4, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 5, 9, 2, 11, 1, 10, 3, 8, 4, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 5, 9, 3, 10, 1, 11, 2, 8, 4, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 5, 9, 3, 11, 1, 10, 2, 8, 4, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 7, 3, 9, 1, 11, 2, 10, 4, 8, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 7, 3, 9, 2, 11, 1, 10, 4, 8, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 7, 3, 10, 1, 11, 2, 9, 4, 8, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 7, 3, 10, 2, 11, 1, 9, 4, 8, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 7, 4, 9, 1, 11, 2, 10, 3, 8, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 7, 4, 9, 2, 11, 1, 10, 3, 8, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 7, 4, 10, 1, 11, 2, 9, 3, 8, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 7, 4, 10, 2, 11, 1, 9, 3, 8, 5)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 8, 3, 9, 1, 11, 2, 10, 4, 5, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 8, 3, 9, 1, 11, 2, 10, 4, 7, 5)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 8, 3, 9, 2, 11, 1, 10, 4, 5, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 8, 3, 9, 2, 11, 1, 10, 4, 7, 5)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 8, 3, 10, 1, 11, 2, 9, 4, 5, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 8, 3, 10, 1, 11, 2, 9, 4, 7, 5)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 8, 3, 10, 2, 11, 1, 9, 4, 5, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 8, 3, 10, 2, 11, 1, 9, 4, 7, 5)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (6, 8, 4, 2, 10, 1, 11, 3, 9, 5, 7)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (6, 8, 4, 2, 10, 1, 11, 3, 9, 7, 5)), (29.90909090909091, [47, 40, 29, 40, 25, 13, 14, 9, 2, 1], (6, 8, 4, 2, 10, 1, 11, 9, 3, 5, 7)), (29.90909090909091, [49, 36, 29, 44, 21, 17, 14, 5, 4, 1], (6, 8, 4, 2, 10, 1, 11, 9, 3, 7, 5)), (29.90909090909091, [41, 52, 31, 24, 29, 21, 10, 9, 2, 1], (6, 8, 4, 2, 10, 11, 1, 3, 9, 5, 7)), (29.90909090909091, [39, 56, 31, 20, 29, 25, 10, 5, 4, 1], (6, 8, 4, 2, 10, 11, 1, 3, 9, 7, 5)), (29.90909090909091, [45, 44, 29, 36, 27, 13, 14, 9, 2, 1], (6, 8, 4, 2, 10, 11, 1, 9, 3, 5, 7)), (29.90909090909091, [47, 40, 33, 32, 27, 17, 14, 5, 4, 1], (6, 8, 4, 2, 10, 11, 1, 9, 3, 7, 5)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (6, 8, 4, 2, 11, 1, 10, 3, 9, 5, 7)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (6, 8, 4, 2, 11, 1, 10, 3, 9, 7, 5)), (29.90909090909091, [47, 40, 29, 40, 25, 13, 14, 9, 2, 1], (6, 8, 4, 2, 11, 1, 10, 9, 3, 5, 7)), (29.90909090909091, [49, 36, 29, 44, 21, 17, 14, 5, 4, 1], (6, 8, 4, 2, 11, 1, 10, 9, 3, 7, 5)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (6, 8, 4, 3, 10, 1, 11, 2, 9, 5, 7)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (6, 8, 4, 3, 10, 1, 11, 2, 9, 7, 5)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (6, 8, 4, 3, 11, 1, 10, 2, 9, 5, 7)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (6, 8, 4, 3, 11, 1, 10, 2, 9, 7, 5)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 8, 4, 9, 1, 11, 2, 10, 3, 5, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 8, 4, 9, 1, 11, 2, 10, 3, 7, 5)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 8, 4, 9, 2, 11, 1, 10, 3, 5, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 8, 4, 9, 2, 11, 1, 10, 3, 7, 5)), (29.90909090909091, [53, 28, 37, 36, 21, 25, 8, 9, 2, 1], (6, 8, 4, 10, 1, 11, 2, 3, 9, 5, 7)), (29.90909090909091, [51, 32, 37, 32, 25, 21, 12, 5, 4, 1], (6, 8, 4, 10, 1, 11, 2, 3, 9, 7, 5)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 8, 4, 10, 1, 11, 2, 9, 3, 5, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 8, 4, 10, 1, 11, 2, 9, 3, 7, 5)), (29.90909090909091, [51, 32, 33, 40, 19, 25, 8, 9, 2, 1], (6, 8, 4, 10, 2, 1, 11, 3, 9, 5, 7)), (29.90909090909091, [49, 36, 29, 44, 19, 21, 12, 5, 4, 1], (6, 8, 4, 10, 2, 1, 11, 3, 9, 7, 5)), (29.90909090909091, [43, 48, 31, 28, 29, 17, 12, 9, 2, 1], (6, 8, 4, 10, 2, 1, 11, 9, 3, 5, 7)), (29.90909090909091, [45, 44, 31, 32, 29, 13, 16, 5, 4, 1], (6, 8, 4, 10, 2, 1, 11, 9, 3, 7, 5)), (29.90909090909091, [53, 28, 37, 36, 21, 25, 8, 9, 2, 1], (6, 8, 4, 10, 2, 11, 1, 3, 9, 5, 7)), (29.90909090909091, [51, 32, 37, 32, 25, 21, 12, 5, 4, 1], (6, 8, 4, 10, 2, 11, 1, 3, 9, 7, 5)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (6, 8, 4, 10, 2, 11, 1, 9, 3, 5, 7)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (6, 8, 4, 10, 2, 11, 1, 9, 3, 7, 5)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 4, 8, 2, 10, 1, 11, 3, 9, 5, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 4, 8, 2, 11, 1, 10, 3, 9, 5, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 4, 8, 3, 10, 1, 11, 2, 9, 5, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 4, 8, 3, 11, 1, 10, 2, 9, 5, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 4, 9, 2, 10, 1, 11, 3, 8, 5, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 4, 9, 2, 11, 1, 10, 3, 8, 5, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 4, 9, 3, 10, 1, 11, 2, 8, 5, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 4, 9, 3, 11, 1, 10, 2, 8, 5, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (7, 5, 3, 9, 1, 11, 2, 10, 4, 8, 6)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (7, 5, 3, 9, 1, 11, 2, 10, 8, 4, 6)), (29.90909090909091, [45, 44, 29, 36, 27, 13, 14, 9, 2, 1], (7, 5, 3, 9, 1, 11, 10, 2, 4, 8, 6)), (29.90909090909091, [49, 36, 29, 44, 19, 21, 12, 5, 4, 1], (7, 5, 3, 9, 1, 11, 10, 2, 8, 4, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (7, 5, 3, 9, 2, 11, 1, 10, 4, 8, 6)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (7, 5, 3, 9, 2, 11, 1, 10, 8, 4, 6)), (29.90909090909091, [47, 40, 29, 40, 25, 13, 14, 9, 2, 1], (7, 5, 3, 9, 10, 1, 11, 2, 4, 8, 6)), (29.90909090909091, [51, 32, 37, 32, 25, 21, 12, 5, 4, 1], (7, 5, 3, 9, 10, 1, 11, 2, 8, 4, 6)), (29.90909090909091, [43, 48, 31, 28, 29, 17, 12, 9, 2, 1], (7, 5, 3, 9, 11, 1, 2, 10, 4, 8, 6)), (29.90909090909091, [39, 56, 31, 20, 29, 25, 10, 5, 4, 1], (7, 5, 3, 9, 11, 1, 2, 10, 8, 4, 6)), (29.90909090909091, [47, 40, 29, 40, 25, 13, 14, 9, 2, 1], (7, 5, 3, 9, 11, 1, 10, 2, 4, 8, 6)), (29.90909090909091, [51, 32, 37, 32, 25, 21, 12, 5, 4, 1], (7, 5, 3, 9, 11, 1, 10, 2, 8, 4, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (7, 5, 3, 10, 1, 11, 2, 9, 4, 8, 6)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (7, 5, 3, 10, 1, 11, 2, 9, 8, 4, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (7, 5, 3, 10, 2, 11, 1, 9, 4, 8, 6)), (29.90909090909091, [53, 28, 39, 32, 23, 25, 10, 5, 4, 1], (7, 5, 3, 10, 2, 11, 1, 9, 8, 4, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (7, 5, 4, 9, 1, 11, 2, 10, 3, 8, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (7, 5, 4, 9, 2, 11, 1, 10, 3, 8, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (7, 5, 4, 10, 1, 11, 2, 9, 3, 8, 6)), (29.90909090909091, [57, 20, 47, 24, 31, 17, 12, 9, 2, 1], (7, 5, 4, 10, 2, 11, 1, 9, 3, 8, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 5, 8, 2, 10, 1, 11, 3, 9, 4, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 5, 8, 2, 11, 1, 10, 3, 9, 4, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 5, 8, 3, 10, 1, 11, 2, 9, 4, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 5, 8, 3, 11, 1, 10, 2, 9, 4, 6)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (7, 5, 9, 2, 10, 1, 11, 3, 4, 8, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 5, 9, 2, 10, 1, 11, 3, 8, 4, 6)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (7, 5, 9, 2, 11, 1, 10, 3, 4, 8, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 5, 9, 2, 11, 1, 10, 3, 8, 4, 6)), (29.90909090909091, [53, 28, 37, 36, 21, 25, 8, 9, 2, 1], (7, 5, 9, 3, 1, 11, 2, 10, 4, 8, 6)), (29.90909090909091, [49, 36, 29, 44, 21, 17, 14, 5, 4, 1], (7, 5, 9, 3, 1, 11, 2, 10, 8, 4, 6)), (29.90909090909091, [41, 52, 31, 24, 29, 21, 10, 9, 2, 1], (7, 5, 9, 3, 1, 11, 10, 2, 4, 8, 6)), (29.90909090909091, [45, 44, 31, 32, 29, 13, 16, 5, 4, 1], (7, 5, 9, 3, 1, 11, 10, 2, 8, 4, 6)), (29.90909090909091, [53, 28, 37, 36, 21, 25, 8, 9, 2, 1], (7, 5, 9, 3, 2, 11, 1, 10, 4, 8, 6)), (29.90909090909091, [49, 36, 29, 44, 21, 17, 14, 5, 4, 1], (7, 5, 9, 3, 2, 11, 1, 10, 8, 4, 6)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (7, 5, 9, 3, 10, 1, 11, 2, 4, 8, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 5, 9, 3, 10, 1, 11, 2, 8, 4, 6)), (29.90909090909091, [51, 32, 33, 40, 19, 25, 8, 9, 2, 1], (7, 5, 9, 3, 11, 1, 2, 10, 4, 8, 6)), (29.90909090909091, [47, 40, 33, 32, 27, 17, 14, 5, 4, 1], (7, 5, 9, 3, 11, 1, 2, 10, 8, 4, 6)), (29.90909090909091, [55, 24, 43, 28, 27, 21, 10, 9, 2, 1], (7, 5, 9, 3, 11, 1, 10, 2, 4, 8, 6)), (29.90909090909091, [59, 16, 51, 20, 35, 13, 16, 5, 4, 1], (7, 5, 9, 3, 11, 1, 10, 2, 8, 4, 6))]

[[0, 2, 2, 4, 4, 6, 5, 5, 3, 3, 1, 1], [2, 0, 4, 2, 6, 4, 7, 3, 5, 1, 3, 1], [2, 4, 0, 6, 2, 8, 3, 7, 1, 5, 1, 3], [4, 2, 6, 0, 8, 2, 9, 1, 7, 1, 5, 3], [4, 6, 2, 8, 0, 10, 1, 9, 1, 7, 3, 5], [6, 4, 8, 2, 10, 0, 11, 1, 9, 3, 7, 5], [5, 7, 3, 9, 1, 11, 0, 10, 2, 8, 4, 6], [5, 3, 7, 1, 9, 1, 10, 0, 8, 2, 6, 4], [3, 5, 1, 7, 1, 9, 2, 8, 0, 6, 2, 4], [3, 1, 5, 1, 7, 3, 8, 2, 6, 0, 4, 2], [1, 3, 1, 5, 3, 7, 4, 6, 2, 4, 0, 2], [1, 1, 3, 3, 5, 5, 6, 4, 4, 2, 2, 0]]
[[0, 2, 2, 4, 4, 5, 3, 3, 1, 1], [2, 0, 4, 2, 6, 3, 5, 1, 3, 1], [2, 4, 0, 6, 2, 7, 1, 5, 1, 3], [4, 2, 6, 0, 8, 1, 7, 1, 5, 3], [4, 6, 2, 8, 0, 9, 1, 7, 3, 5], [5, 3, 7, 1, 9, 0, 8, 2, 6, 4], [3, 5, 1, 7, 1, 8, 0, 6, 2, 4], [3, 1, 5, 1, 7, 2, 6, 0, 4, 2], [1, 3, 1, 5, 3, 6, 2, 4, 0, 2], [1, 1, 3, 3, 5, 4, 4, 2, 2, 0]]
[[0, 2, 2, 5, 3, 4, 3, 1, 1], [2, 0, 4, 3, 5, 2, 1, 3, 1], [2, 4, 0, 7, 1, 6, 5, 1, 3], [5, 3, 7, 0, 8, 1, 2, 6, 4], [3, 5, 1, 8, 0, 7, 6, 2, 4], [4, 2, 6, 1, 7, 0, 1, 5, 3], [3, 1, 5, 2, 6, 1, 0, 4, 2], [1, 3, 1, 6, 2, 5, 4, 0, 2], [1, 1, 3, 4, 4, 3, 2, 2, 0]]

